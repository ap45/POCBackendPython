# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Backend CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:
  repository_dispatch:
    types: [trigger_backend]  # To listen for the event from frontend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.12'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Download frontend artifact
        run: |
          # Fetch artifacts
          ARTIFACTS=$(curl -L -H "Authorization: token ${{ secrets.ACTION_KEY }}" \
            https://api.github.com/repos/ap45/POCfrontend/actions/artifacts)

          # Check if artifacts were fetched successfully
          if [ -z "$ARTIFACTS" ]; then
            echo "No artifacts found or failed to fetch artifacts."
            exit 1
          fi

          # Extract the download URL for the frontend build artifact
          DOWNLOAD_URL=$(echo "$ARTIFACTS" | jq -r '.artifacts[] | select(.name=="frontend-build") | .archive_download_url')

          # Check if the download URL was extracted successfully
          if [ -z "$DOWNLOAD_URL" ]; then
            echo "Failed to extract download URL for frontend build artifact."
            exit 1
          fi

          # Download the frontend artifact
          curl -L -H "Authorization: token ${{ secrets.ACTION_KEY }}" -o frontend.zip "$DOWNLOAD_URL"

      - name: Unzip frontend artifact
        run: |
          unzip frontend.zip -d frontend

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

       - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'uncwpocwebapp'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_3E16ACD2B37D4B9EA5964F8CC6D5033A }}
